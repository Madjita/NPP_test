// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using test_npp_api.Data;

#nullable disable

namespace test_npp_api.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("test_npp_api.EF_entities.Tool", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tools");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Count = 10,
                            Name = "Ключ"
                        },
                        new
                        {
                            Id = 2,
                            Count = 3,
                            Name = "Мощимер"
                        },
                        new
                        {
                            Id = 3,
                            Count = 10,
                            Name = "Устройстов 1"
                        },
                        new
                        {
                            Id = 4,
                            Count = 5,
                            Name = "Устройстов 2"
                        });
                });

            modelBuilder.Entity("test_npp_api.EF_entities.Tool_User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("GetCount")
                        .HasColumnType("int");

                    b.Property<int>("ToolId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ToolId");

                    b.HasIndex("UserId");

                    b.ToTable("Tool_User");
                });

            modelBuilder.Entity("test_npp_api.EF_entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Калугина",
                            LastName = "Анастасия",
                            MiddleName = "Матвеевна"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Григорьев",
                            LastName = "Арсений",
                            MiddleName = "Викторович"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Назарова",
                            LastName = "Ева",
                            MiddleName = "Константиновна"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Сазонова",
                            LastName = "Маргарита",
                            MiddleName = "Егоровна"
                        });
                });

            modelBuilder.Entity("test_npp_api.EF_entities.Tool_User", b =>
                {
                    b.HasOne("test_npp_api.EF_entities.Tool", "Tool")
                        .WithMany("tool_users")
                        .HasForeignKey("ToolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("test_npp_api.EF_entities.User", "User")
                        .WithMany("tool_users")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tool");

                    b.Navigation("User");
                });

            modelBuilder.Entity("test_npp_api.EF_entities.Tool", b =>
                {
                    b.Navigation("tool_users");
                });

            modelBuilder.Entity("test_npp_api.EF_entities.User", b =>
                {
                    b.Navigation("tool_users");
                });
#pragma warning restore 612, 618
        }
    }
}
